##
# Configuration file for MegaLinter
#
# @link https://megalinter.io/configuration/
#

##
# Linters that support fixing in-place do so within the commit
#
# The fixing linter doesn't create another Pull Request or commit - the linter fixes small changes in-place during
# testing.
#
APPLY_FIXES: all

##
# Never run these linters, regardless of flavor or configuration
#
DISABLE_LINTERS:
  # Lychee is _extremely_ slow right now - consider the usefulness of dead hyper link checking before re-enabling
  - SPELL_LYCHEE

##
# Don't create public reports on file.io
#
FILEIO_REPORTER: false

##
# Recommend flavors to the developer to help reduce container layer size
#
FLAVOR_SUGGESTIONS: true

##
# Follow the `.gitignore` file for what files to ignore in the linter
#
IGNORE_GITIGNORED_FILES: true

##
# All linting configuration is placed in the `.config` folder
#
LINTER_RULES_PATH: .config/linters

##
# TODO Manually adds a safe directory as this does not seem to run in this configuration
# @link https://github.com/oxsecurity/megalinter/issues/3017
#
PRE_COMMANDS:
  - command: git config --global --add safe.directory $PWD
    cwd: "workspace"

##
# Avoid unnecessary text output in logs
#
PRINT_ALPACA: false

##
# Time checking helps with optimization
#
SHOW_ELAPSED_TIME: true

##
# Allow developers to review other linters that may help with their project.
#
SHOW_SKIPPED_LINTERS: true

## ---------------------------------------------------------------------------------------------------------------------
# Linter configurations
#

##
# TODO Manually includes `*.mak` files as Checkmake doesn't currently support includes
# @link https://github.com/mrtazz/checkmake/issues/97
#
MAKEFILE_CHECKMAKE_FILE_EXTENSIONS:
  - .mak

##
# Don't include Vale styles in Markdown linting.
#
MARKDOWN_MARKDOWNLINT_FILTER_REGEX_EXCLUDE: (\.config\/linters\/vale\/styles\/.*)

##
# Prevent DevSkim from reacting to other linters/utilities that may also need to configuration for sensitive areas.
#
REPOSITORY_DEVSKIM_ARGUMENTS: ["--options-json", ".config/linters/.devskim.json"]

##
# MegaLinter doesn't lint code by default, limiting linting to `.md` and `.rst` files.
#
# These are Vale's supported file extensions, with other format mappings provided in `.vale.ini`.
#
# Note, YAML is explicitly not supported as many project benefit from having in-editor prose linting of content blocks,
# and this capability would disappear if comments were solely linted. As such, a compromise solution is to not lint
# YAML during integration, but enable visualization and management of possible errors in the editor.
#
SPELL_VALE_FILE_EXTENSIONS:
  - .bsh
  - .c
  - .cc
  - .cpp
  - .cs
  - .css
  - .csx
  - .cxx
  - .ecrc
  - .editorconfig
  - .gitattributes
  - .gitignore
  - .go
  - .h
  - .hpp
  - .hs
  - .ini
  - .java
  - .js
  - .json
  - .less
  - .lua
  - .mak
  - .md
  - .php
  - .pl
  - .pm
  - .pod
  - .prettierignore
  - .ps1
  - .py
  - .py3
  - .pyi
  - .pyw
  - .r
  - .R
  - .rb
  - .rs
  - .rst
  - .sass
  - .sbt
  - .scala
  - .scss
  - .swift
  - .ts
  - .tsx
  - Makefile

##
# Don't include Vale styles in v8r linting.
#
# TODO Also temporarily ignores GitHub Issue templates due to problem with schema update.
# @link https://github.com/andrewvaughan/template-core/issues/44
#
YAML_V8R_FILTER_REGEX_EXCLUDE: (\.config\/linters\/vale\/styles\/.*|\.github/ISSUE_TEMPLATE/.*\.yml)

##
# Don't include Vale styles in YAML linting.
#
YAML_YAMLLINT_FILTER_REGEX_EXCLUDE: (\.config\/linters\/vale\/styles\/.*)
